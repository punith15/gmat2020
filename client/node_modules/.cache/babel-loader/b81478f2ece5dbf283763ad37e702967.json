{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\punith123\\\\Desktop\\\\Project1\\\\gmat2020\\\\src\\\\containers\\\\Container.tsx\";\nimport React from 'react';\nimport { mockApi } from '../api/MongoAPI';\nimport SideBar from '../bars/SideBar';\nimport './Containers.css';\nimport AnswerButton from '../answer-form/AnswerButton';\nimport Question from '../answer-form/Question';\nimport Solution from '../answer-form/Solution';\nimport '../answer-form/Answers.css';\nimport ViewSolutionsButton from '../answer-form/ViewSolutionsButton';\nimport MultipleChoiceBox from '../answer-form/MultipleChoiceBox'; // import image from '../../public/grayuser.png';\n\nexport default class Container extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      mockApi().then(res => {\n        // response is an array of \"question\" objects, which contain question, correct answer, solutions, etc.\n        const defaultObj = res[0];\n        defaultObj.answers.forEach(value => {\n          value.selected = false;\n        });\n        this.setState({\n          submitButtonClicked: false,\n          questionArr: res,\n          activeQuestion: res[0],\n          currentQuestionIndex: 0\n        });\n      }).catch(error => {\n        console.log('Error getting questions', error);\n      });\n    };\n\n    this.onSidebarClick = index => {\n      if (index < 0 || index >= this.state.questionArr.length) {\n        return;\n      }\n\n      this.state.activeQuestion.answers.forEach(value => {\n        value.selected = false;\n      });\n\n      if (this.state.currentQuestionIndex !== index) {\n        this.setState({\n          submitButtonClicked: false,\n          activeQuestion: this.state.questionArr[index],\n          currentQuestionIndex: index\n        });\n      }\n    };\n\n    this.updateSelectedAnswer = index => {\n      if (this.state.submitButtonClicked === false) {\n        const newAnswer = this.state.activeQuestion.answers.map((item, i) => {\n          if (i === index) {\n            item.selected = !item.selected;\n            return item;\n          } else {\n            item.selected = false;\n            return item;\n          }\n        });\n        const activeQuestionToSet = Object.assign({}, this.state.activeQuestion);\n        activeQuestionToSet.answers = newAnswer;\n        this.setState({\n          activeQuestion: activeQuestionToSet\n        });\n      }\n    };\n\n    this.onSubmitButtonClicked = () => {\n      this.setState({\n        submitButtonClicked: true\n      });\n    };\n\n    this.shouldDisableSubmit = () => {\n      return this.state.activeQuestion.answers ? this.state.activeQuestion.answers.every(current => current.selected === false || current.selected === undefined) : false;\n    };\n\n    this.onPreviousButtonClick = () => {\n      this.onSidebarClick(this.state.currentQuestionIndex - 1);\n    };\n\n    this.onForwardButtonClick = () => {\n      this.onSidebarClick(this.state.currentQuestionIndex + 1);\n    };\n\n    this.onViewSolutionsButtonClicked = () => {\n      this.setState({\n        activeSolution: this.state.activeQuestion.userAnswers[0]\n      });\n    };\n\n    this.state = {\n      submitButtonClicked: false,\n      questionArr: [],\n      activeQuestion: {},\n      currentQuestionIndex: 0,\n      activeSolution: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fullscreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-left-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"top-left-previous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, \"\\u2039\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-middle-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-right-button1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top-right-button2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"avatar\",\n      src: process.env.PUBLIC_URL + '/grayuser.png',\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"userfullname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, \"Elle Roh\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"sidebutton previous\",\n      onClick: this.onPreviousButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, \"\\u2039\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"sidebutton next\",\n      onClick: this.onForwardButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, \"\\u203A\"), /*#__PURE__*/React.createElement(SideBar, {\n      questionArr: this.state.questionArr,\n      onSidebarClick: this.onSidebarClick,\n      activeQuestion: this.state.activeQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"Training\",\n      className: \"centered-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Question, {\n      question: this.state.activeQuestion.question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(MultipleChoiceBox, {\n      answers: this.state.activeQuestion.answers ? this.state.activeQuestion.answers : [],\n      correctLetter: this.state.activeQuestion.correctLetter,\n      updateSelectedAnswer: this.updateSelectedAnswer,\n      submitButtonClicked: this.state.submitButtonClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"flex-buttons-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AnswerButton, {\n      onSubmitButtonClicked: this.onSubmitButtonClicked,\n      doDisable: this.shouldDisableSubmit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ViewSolutionsButton, {\n      className: \"flex-buttons-container-right\",\n      showSolutions: this.onViewSolutionsButtonClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Solution, {\n      solution: this.state.activeSolution,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/punith123/Desktop/Project1/gmat2020/src/containers/Container.tsx"],"names":["React","mockApi","SideBar","AnswerButton","Question","Solution","ViewSolutionsButton","MultipleChoiceBox","Container","Component","constructor","props","componentDidMount","then","res","defaultObj","answers","forEach","value","selected","setState","submitButtonClicked","questionArr","activeQuestion","currentQuestionIndex","catch","error","console","log","onSidebarClick","index","state","length","updateSelectedAnswer","newAnswer","map","item","i","activeQuestionToSet","Object","assign","onSubmitButtonClicked","shouldDisableSubmit","every","current","undefined","onPreviousButtonClick","onForwardButtonClick","onViewSolutionsButtonClicked","activeSolution","userAnswers","render","process","env","PUBLIC_URL","question","correctLetter"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { mockApi } from '../api/MongoAPI';\r\nimport SideBar from '../bars/SideBar';\r\nimport './Containers.css';\r\nimport AnswerButton from '../answer-form/AnswerButton';\r\nimport Question from '../answer-form/Question';\r\nimport Solution from '../answer-form/Solution';\r\nimport '../answer-form/Answers.css';\r\nimport ViewSolutionsButton from '../answer-form/ViewSolutionsButton';\r\nimport MultipleChoiceBox from '../answer-form/MultipleChoiceBox';\r\n// import image from '../../public/grayuser.png';\r\n\r\n\r\n\r\n\r\n\r\ninterface IContainerProps {\r\n\r\n}\r\n\r\ninterface IContainerState {\r\n    submitButtonClicked: boolean,\r\n    questionArr: any[];\r\n    activeQuestion: any;\r\n    currentQuestionIndex: number;\r\n    activeSolution: any;\r\n    \r\n}\r\n\r\n\r\nexport default class Container extends React.Component<IContainerProps, IContainerState>{\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            submitButtonClicked: false,\r\n            questionArr: [],\r\n            activeQuestion: {},\r\n            currentQuestionIndex: 0,\r\n            activeSolution: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        mockApi()\r\n            .then((res) => {\r\n                // response is an array of \"question\" objects, which contain question, correct answer, solutions, etc.\r\n                const defaultObj = res[0];\r\n                defaultObj.answers.forEach((value: any) => {\r\n                    value.selected = false;\r\n                });\r\n\r\n                this.setState({submitButtonClicked: false, \r\n                    questionArr: res,\r\n                    activeQuestion: res[0],\r\n                    currentQuestionIndex: 0\r\n                 });\r\n            })\r\n            .catch((error) => {\r\n                console.log('Error getting questions', error);\r\n            })\r\n\r\n    };\r\n\r\n    onSidebarClick = (index: number) => {\r\n        if (index < 0 || index >= this.state.questionArr.length){\r\n            return;\r\n        }\r\n        this.state.activeQuestion.answers.forEach((value: any) => {\r\n            value.selected = false;\r\n        });\r\n        if (this.state.currentQuestionIndex !== index){\r\n            this.setState({\r\n                submitButtonClicked: false,\r\n                activeQuestion: this.state.questionArr[index],                \r\n                currentQuestionIndex: index\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    updateSelectedAnswer = (index: number) => {\r\n        if (this.state.submitButtonClicked === false) {\r\n            const newAnswer = this.state.activeQuestion.answers.map((item: any, i: number) => {\r\n                if (i === index) {\r\n                    item.selected = !item.selected;\r\n                    return item;\r\n                } else {\r\n                    item.selected = false;\r\n                    return item;    \r\n                }\r\n            })\r\n            const activeQuestionToSet = Object.assign({}, this.state.activeQuestion);\r\n            activeQuestionToSet.answers = newAnswer;\r\n            this.setState({ activeQuestion: activeQuestionToSet });\r\n        }\r\n    }\r\n\r\n\r\n    onSubmitButtonClicked = () => {\r\n        this.setState({ submitButtonClicked: true });\r\n    }\r\n\r\n    shouldDisableSubmit = () => {\r\n        return this.state.activeQuestion.answers ? this.state.activeQuestion.answers.every((current : any) =>  current.selected === false || current.selected === undefined) : false;        \r\n    }\r\n\r\n    onPreviousButtonClick = () => {\r\n        this.onSidebarClick(this.state.currentQuestionIndex - 1)\r\n    }\r\n\r\n    onForwardButtonClick = () => {\r\n        this.onSidebarClick(this.state.currentQuestionIndex + 1)\r\n    }\r\n\r\n    onViewSolutionsButtonClicked = () => {\r\n        this.setState({\r\n            activeSolution: this.state.activeQuestion.userAnswers[0]            \r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fullscreen\">\r\n                <div className=\"topbar\">\r\n                    <div className=\"top-left-button\">                        \r\n                        <a className=\"top-left-previous\">&#8249;</a>\r\n                    </div>\r\n                    <div className=\"top-middle-bar\"/>\r\n                    <div className=\"top-right-button1\"/>\r\n                    <div className=\"top-right-button2\">\r\n                        <img className=\"avatar\" src={process.env.PUBLIC_URL + '/grayuser.png'} alt=\"logo\"></img>\r\n                        <span className=\"userfullname\">Elle Roh</span>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* everything under the topBar */}\r\n                <div className=\"flex-container\">\r\n\r\n                    {/* Forward and back buttons */}\r\n                    <a className=\"sidebutton previous\" onClick={this.onPreviousButtonClick}>&#8249;</a>\r\n                    <a className=\"sidebutton next\" onClick={this.onForwardButtonClick}>&#8250;</a>\r\n\r\n                    <SideBar questionArr={this.state.questionArr} onSidebarClick={this.onSidebarClick} activeQuestion={this.state.activeQuestion} />\r\n\r\n                    {/* main square question/answer/solution centered column */}\r\n                    <div id=\"Training\" className=\"centered-column\">\r\n                        <Question question={this.state.activeQuestion.question} />\r\n                        <MultipleChoiceBox answers={this.state.activeQuestion.answers ? this.state.activeQuestion.answers : []}\r\n                            correctLetter={this.state.activeQuestion.correctLetter} updateSelectedAnswer={this.updateSelectedAnswer}\r\n                            submitButtonClicked={this.state.submitButtonClicked}\r\n                        />\r\n                        <form className=\"flex-buttons-container\">\r\n                            <AnswerButton onSubmitButtonClicked={this.onSubmitButtonClicked} doDisable={this.shouldDisableSubmit()} />\r\n                            <ViewSolutionsButton className=\"flex-buttons-container-right\" showSolutions={this.onViewSolutionsButtonClicked} />\r\n                        </form>                        \r\n                        <Solution solution={this.state.activeSolution}/>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}