{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\punith123\\\\Desktop\\\\Project1\\\\gmat2020\\\\client\\\\src\\\\containers\\\\SignUp.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postSignUpUser = async () => {\n      const userRes = await fetch('/signup', {\n        method: 'POST',\n        body: JSON.stringify(this.state.user)\n      });\n\n      if (userRes.status == 201) {\n        this.setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmPassword: '',\n          message: ['Sign Up Successful', 'green']\n        });\n        setTimeout(() => {}, 3000);\n      } else {\n        this.setState({ ...this.state,\n          message: ['Unable to Sign Up, try later', 'red']\n        });\n      }\n    };\n\n    this.onHandleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.password !== this.state.confirmPassword) {\n        this.setState({ ...this.state,\n          isMatch: false,\n          message: [],\n          loading: false\n        });\n      } else {\n        const data = {\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password\n        };\n        this.setState({ ...this.state,\n          isMatch: true,\n          user: data,\n          message: [],\n          loading: true\n        });\n      }\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      isMatch: true,\n      message: [],\n      user: {},\n      loading: false\n    };\n    this.postSignUpUser = this.postSignUpUser.bind(this);\n    this.onHandleSubmit = this.onHandleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-5 signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"credential-form\",\n      onSubmit: this.onHandleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"name\",\n      onChange: e => this.setState({ ...this.state,\n        name: e.target.value\n      }),\n      value: this.state.name,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      class: \"form-control\",\n      id: \"email\",\n      onChange: e => this.setState({ ...this.state,\n        email: e.target.value\n      }),\n      value: this.state.email,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      id: \"password\",\n      onChange: e => this.setState({ ...this.state,\n        password: e.target.value\n      }),\n      value: this.state.password,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }), !this.state.isMatch ? /*#__PURE__*/React.createElement(\"small\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 44\n      }\n    }, \"Password missmatch\") : ''), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"confirm-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      class: \"form-control\",\n      id: \"confirm-password\",\n      onChange: e => this.setState({ ...this.state,\n        confirmPassword: e.target.value\n      }),\n      value: this.state.confirmPassword,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), !this.state.isMatch ? /*#__PURE__*/React.createElement(\"small\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 44\n      }\n    }, \"Password missmatch\") : ''), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Already Registered ?\", /*#__PURE__*/React.createElement(Link, {\n      className: \"signup-link\",\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"Submit\"), this.state.loading ? /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'blue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 43\n      }\n    }, \"Please Wait....\") : /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: this.state.message[1]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, this.state.message[0]))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/punith123/Desktop/Project1/gmat2020/client/src/containers/SignUp.jsx"],"names":["React","Component","Link","SignUp","constructor","props","postSignUpUser","userRes","fetch","method","body","JSON","stringify","state","user","status","setState","name","email","password","confirmPassword","message","setTimeout","onHandleSubmit","e","preventDefault","isMatch","loading","data","bind","render","target","value","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link} from 'react-router-dom'\r\n\r\nclass SignUp extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name : '',\r\n            email : '',\r\n            password : '',\r\n            confirmPassword : '',\r\n            isMatch : true,\r\n            message : [],\r\n            user : {},\r\n            loading : false\r\n        }\r\n        this.postSignUpUser = this.postSignUpUser.bind(this)\r\n        this.onHandleSubmit = this.onHandleSubmit.bind(this)\r\n\r\n    }\r\n\r\n    postSignUpUser = async()=>{\r\n        const userRes = await fetch('/signup', {\r\n            method : 'POST',\r\n            body : JSON.stringify(this.state.user)\r\n        })\r\n\r\n        if(userRes.status == 201){\r\n            this.setState({\r\n                name : '',\r\n                email : '',\r\n                password : '',\r\n                confirmPassword : '',\r\n                message : ['Sign Up Successful', 'green']\r\n            })\r\n            setTimeout(()=>{\r\n                \r\n            },3000)\r\n        }else{\r\n            this.setState({\r\n                ...this.state,\r\n                message : ['Unable to Sign Up, try later', 'red']\r\n            })\r\n        }\r\n    }\r\n\r\n    onHandleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(this.state.password !== this.state.confirmPassword){\r\n            this.setState({\r\n                ...this.state,\r\n                isMatch : false,\r\n                message : [],\r\n                loading : false\r\n            })\r\n        }else{\r\n            const data = {name : this.state.name, email : this.state.email, password : this.state.password}\r\n            this.setState({\r\n                ...this.state,\r\n                isMatch : true,\r\n                user : data,\r\n                message : [],\r\n                loading : true\r\n            })\r\n        } \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"col-md-5 signup\">\r\n                <h2 className=\"text-center\">Sign Up</h2>\r\n                <form className=\"credential-form\" onSubmit={this.onHandleSubmit}>\r\n                    <div class=\"form-group\">\r\n                    <label for=\"name\">Name</label>\r\n                    <input type=\"text\" class=\"form-control\" id=\"name\" \r\n                    onChange={(e)=>this.setState({...this.state, name : e.target.value})}\r\n                    value={this.state.name} required/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <label for=\"email\">Email address</label>\r\n                    <input type=\"email\" class=\"form-control\" id=\"email\" \r\n                    onChange={(e)=>this.setState({...this.state, email : e.target.value})}\r\n                    value={this.state.email} required/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"password\" \r\n                    onChange={(e)=>this.setState({...this.state, password : e.target.value})}\r\n                    value={this.state.password} required/>\r\n                    {!this.state.isMatch ? <small style={{color:'red'}}>Password missmatch</small> : ''}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <label for=\"confirm-password\">Confirm Password</label>\r\n                    <input type=\"password\" class=\"form-control\" id=\"confirm-password\" \r\n                    onChange={(e)=>this.setState({...this.state, confirmPassword : e.target.value})}\r\n                    value={this.state.confirmPassword} required/>\r\n                    {!this.state.isMatch ? <small style={{color:'red'}}>Password missmatch</small> : ''}\r\n                    </div>\r\n                    <p>Already Registered ?\r\n                        <Link className=\"signup-link\" to=\"/\">Login</Link>\r\n                    </p>\r\n                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                    {this.state.loading ? <h3 style={{color:'blue'}}>Please Wait....</h3> : \r\n                    <h3 style={{color:this.state.message[1]}}>{this.state.message[0]}</h3>}\r\n                </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}